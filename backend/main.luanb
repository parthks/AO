{"name":"main.luanb","content":{"cells":{"0":{"code":"local sqlite3 = require(\"lsqlite3\")\ndb = db or sqlite3.open_memory()\ndbAdmin = require(\"@rakis/DbAdmin\").new(db)\n\n","output":"\"undefined\"","type":"CODE","editing":true},"7c55cac9-8db4-4de4-8ccf-9747e38c4555":{"code":"POSTS_TABLE = [[\n    CREATE TABLE IF NOT EXISTS Posts (\n        ID TEXT PRIMARY KEY NOT NULL,\n        Date TEXT,\n        CreatedBy TEXT,\n        Type TEXT,\n        Status TEXT,\n        Latitude REAL,\n        Longitude REAL,\n        Image TEXT\n    );\n]]\n\n\nHISTORICAL_POSTS = [[\n    CREATE TABLE IF NOT EXISTS History (\n        ID TEXT PRIMARY KEY NOT NULL,\n        PID TEXT,\n        Date TEXT,\n        CreatedBy TEXT,\n        Image TEXT,\n        FOREIGN KEY (PID) REFERENCES Posts(ID)\n    );\n]]\n\n\ndb:exec(\"DROP TABLE IF EXISTS Posts;\")\ndb:exec(\"DROP TABLE IF EXISTS History;\")\n\nfunction InitTables()\n    db:exec(POSTS_TABLE)\n    db:exec(HISTORICAL_POSTS)\n    return dbAdmin:tables()\nend\n\nreturn InitTables()\n\n","output":"{ \u001b[32m\"Posts\"\u001b[0m, \u001b[32m\"History\"\u001b[0m }","type":"CODE","editing":true},"f6345989-bca4-4f14-9ebb-78bb89fe2ad5":{"code":"Handlers.add(\"1Human.New-Post\", \n    function (msg)\n        return msg.Action == \"New-Post\"\n    end,\n    function (msg)\n        print(\"got action, adding new post now - \".. msg.Id)\n        local ID = msg.Id\n        local Date = msg.Date or \"12-12-12\"\n        local CreatedBy = msg.From  \n        local Type = msg.IssueType or \"general\" \n        local Status = msg.Status or \"open\"\n        local Latitude = msg.Latitude\n        local Longitude = msg.Longitude\n        local Image = msg.Data or \"\"\n\n        -- add new post\n        print(\"adding new post\")\n        \n        db:exec(string.format([[\n            INSERT INTO Posts (ID, Date, CreatedBy, Type, Status, Latitude, Longitude, Image) \n            VALUES (\"%s\", \"%s\", \"%s\", \"%s\", \"%s\", \"%f\", \"%f\", \"%s\");\n        ]], ID, Date, CreatedBy, Type, Status, Latitude, Longitude, Image))\n\n        local newPostID = dbAdmin:exec(string.format([[select ID from posts where ID = \"%s\"]], msg.Id))\n        -- always true :/\n        if newPostID then \n            Send({ Target = msg.From, Data = \"Added New Post \" .. msg.Id})\n        else \n            Send({ Target = msg.From, Data = \"Failed to add New Post\"})\n        end\n\n\n    end\n)\n\n\n\n\nHandlers.add(\"1Human.Add-Post\", \n    function (msg)\n        return msg.Action == \"Add-Post\"\n    end,\n    function (msg)\n        print(\"got action, adding new post now\")\n        local ID = msg.ID  \n        local Date = msg.Date  \n        local CreatedBy = msg.From  \n        local Type = msg.Type or \"issue\" \n        local Status = msg.Status or \"open\"\n        local Latitude = msg.Latitude\n        local Longitude = msg.Longitude\n        local Image = msg.Data\n\n        print(\"getting posts\")\n        local post = dbAdmin:exec(string.format([[\n            SELECT ID FROM Posts WHERE Latitude = \"%f\" AND Longitude = \"%f\" AND Type = \"%s\";\n        ]], Latitude, Longitude, Type))\n\n        if post then \n        -- add to historic post\n\n        local sql_insert = string.format([[\n            INSERT INTO History (ID, PID, Date, CreatedBy, Image) \n            VALUES (\"%s\", \"%s\", \"%s\", \"%s\", \"%s\");\n        ]], ID, post.ID, Date, CreatedBy, Image)\n        \n        dbAdmin:exec(sql_insert)\n        Send({ Target = msg.From, Data = \"Added History to Post\"})\n        \n        else \n        -- add new post\n        print(\"adding new post\")\n        local sql_insert = string.format([[\n            INSERT INTO Posts (ID, Date, CreatedBy, Type, Status, Latitude, Longitude, Image) \n            VALUES (\"%s\", \"%s\", \"%s\", \"%s\", \"%s\", \"%f\", \"%f\", \"%s\");\n        ]], ID, Date, CreatedBy, Type, Status, Latitude, Longitude, Image)\n        \n        dbAdmin:exec(sql_insert)\n\n        Send({ Target = msg.From, Data = \"Added New Post\"})\n\n        end \n\n    end\n)\n\n\n\n\n\n","output":"\"undefined\"","type":"CODE","editing":true},"eda84aca-8bfe-4bd9-af90-f4b7e887357b":{"code":"local json = require('json')\n\nHandlers.add(\"1Human.Get-Posts\", function (msg)\n        return msg.Action == \"Get-Posts\"\nend,\nfunction (msg)\n    local posts = dbAdmin:exec([[\n        select ID, Date, CreatedBy, Type, Status, Latitude, Longitude from Posts;\n    ]])\n    print(\"Listing \" .. #posts.. \"posts\")\n    Send({ Target = msg.From, Action = \"1Human.Posts\", Data = json.encode(posts) })\n\nend\n)\n\nHandlers.add(\"1Human.Get-Post\", function (msg)\n        return msg.Action == \"Get-Post\"\nend,\nfunction (msg)\n    -- local ID = msg.PostID\n    \n\n    local post = dbAdmin:exec(string.format([[\n        SELECT * FROM Posts WHERE \"ID\" = \"%s\";\n    ]], msg.PostID))\n\n    print(\"Got Full Post: \" .. msg.PostID)\n    Send({ Target = msg.From, Action = \"1Human.Full-Post\", Data = json.encode(post) })\n\nend\n)","output":"\"undefined\"","type":"CODE","editing":true}},"cellOrder":["0","7c55cac9-8db4-4de4-8ccf-9747e38c4555","f6345989-bca4-4f14-9ebb-78bb89fe2ad5","eda84aca-8bfe-4bd9-af90-f4b7e887357b"]},"language":"lua","type":"NOTEBOOK"}